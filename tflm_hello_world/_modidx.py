# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/tflm_hello_world',
                'doc_host': 'https://lifeofborna.github.io',
                'git_url': 'https://github.com/lifeofborna/tflm_hello_world',
                'lib_path': 'tflm_hello_world'},
  'syms': { 'tflm_hello_world.aws_s3': { 'tflm_hello_world.aws_s3.S3_Connector': ('aws_s3.html#s3_connector', 'tflm_hello_world/aws_s3.py'),
                                         'tflm_hello_world.aws_s3.S3_Connector.__init__': ( 'aws_s3.html#s3_connector.__init__',
                                                                                            'tflm_hello_world/aws_s3.py'),
                                         'tflm_hello_world.aws_s3.S3_Connector.count_objects': ( 'aws_s3.html#s3_connector.count_objects',
                                                                                                 'tflm_hello_world/aws_s3.py'),
                                         'tflm_hello_world.aws_s3.S3_Connector.delete_objects': ( 'aws_s3.html#s3_connector.delete_objects',
                                                                                                  'tflm_hello_world/aws_s3.py'),
                                         'tflm_hello_world.aws_s3.S3_Connector.move': ( 'aws_s3.html#s3_connector.move',
                                                                                        'tflm_hello_world/aws_s3.py'),
                                         'tflm_hello_world.aws_s3.S3_Connector.read_images': ( 'aws_s3.html#s3_connector.read_images',
                                                                                               'tflm_hello_world/aws_s3.py'),
                                         'tflm_hello_world.aws_s3.S3_Connector.upload_img': ( 'aws_s3.html#s3_connector.upload_img',
                                                                                              'tflm_hello_world/aws_s3.py')},
            'tflm_hello_world.compiling': { 'tflm_hello_world.compiling.convert_model': ( 'compiling.html#convert_model',
                                                                                          'tflm_hello_world/compiling.py'),
                                            'tflm_hello_world.compiling.convert_model_to_cc': ( 'compiling.html#convert_model_to_cc',
                                                                                                'tflm_hello_world/compiling.py'),
                                            'tflm_hello_world.compiling.convert_to_c_array': ( 'compiling.html#convert_to_c_array',
                                                                                               'tflm_hello_world/compiling.py'),
                                            'tflm_hello_world.compiling.plot_size': ( 'compiling.html#plot_size',
                                                                                      'tflm_hello_world/compiling.py')},
            'tflm_hello_world.core': { 'tflm_hello_world.core.foo': ('core.html#foo', 'tflm_hello_world/core.py'),
                                       'tflm_hello_world.core.say_hello': ('core.html#say_hello', 'tflm_hello_world/core.py')},
            'tflm_hello_world.export': { 'tflm_hello_world.export.ExportTestProc': ( 'export.html#exporttestproc',
                                                                                     'tflm_hello_world/export.py'),
                                         'tflm_hello_world.export.ExportTestProc.__init__': ( 'export.html#exporttestproc.__init__',
                                                                                              'tflm_hello_world/export.py'),
                                         'tflm_hello_world.export.ExportTestProc._default_exp_': ( 'export.html#exporttestproc._default_exp_',
                                                                                                   'tflm_hello_world/export.py'),
                                         'tflm_hello_world.export.ExportTestProc._test_': ( 'export.html#exporttestproc._test_',
                                                                                            'tflm_hello_world/export.py'),
                                         'tflm_hello_world.export._default_exp': ('export.html#_default_exp', 'tflm_hello_world/export.py'),
                                         'tflm_hello_world.export._is_test_cell': ( 'export.html#_is_test_cell',
                                                                                    'tflm_hello_world/export.py'),
                                         'tflm_hello_world.export.construct_imports': ( 'export.html#construct_imports',
                                                                                        'tflm_hello_world/export.py'),
                                         'tflm_hello_world.export.convert_pytest': ( 'export.html#convert_pytest',
                                                                                     'tflm_hello_world/export.py'),
                                         'tflm_hello_world.export.create_test_modules': ( 'export.html#create_test_modules',
                                                                                          'tflm_hello_world/export.py'),
                                         'tflm_hello_world.export.get_directive': ( 'export.html#get_directive',
                                                                                    'tflm_hello_world/export.py')},
            'tflm_hello_world.installing': { 'tflm_hello_world.installing.ArduinoNano33BLE_Installer': ( 'installing.html#arduinonano33ble_installer',
                                                                                                         'tflm_hello_world/installing.py'),
                                             'tflm_hello_world.installing.ArduinoNano33BLE_Installer.__convert_model_to_arduino': ( 'installing.html#arduinonano33ble_installer.__convert_model_to_arduino',
                                                                                                                                    'tflm_hello_world/installing.py'),
                                             'tflm_hello_world.installing.ArduinoNano33BLE_Installer.compile': ( 'installing.html#arduinonano33ble_installer.compile',
                                                                                                                 'tflm_hello_world/installing.py'),
                                             'tflm_hello_world.installing.ArduinoNano33BLE_Installer.list_ports': ( 'installing.html#arduinonano33ble_installer.list_ports',
                                                                                                                    'tflm_hello_world/installing.py'),
                                             'tflm_hello_world.installing.ArduinoNano33BLE_Installer.tag_image': ( 'installing.html#arduinonano33ble_installer.tag_image',
                                                                                                                   'tflm_hello_world/installing.py'),
                                             'tflm_hello_world.installing.ArduinoNano33BLE_Installer.upload': ( 'installing.html#arduinonano33ble_installer.upload',
                                                                                                                'tflm_hello_world/installing.py')},
            'tflm_hello_world.observing': { 'tflm_hello_world.observing.read_person_detection_from_relay': ( 'observing.html#read_person_detection_from_relay',
                                                                                                             'tflm_hello_world/observing.py'),
                                            'tflm_hello_world.observing.read_person_detection_from_serial': ( 'observing.html#read_person_detection_from_serial',
                                                                                                              'tflm_hello_world/observing.py')},
            'tflm_hello_world.tcp_hello_observer': { 'tflm_hello_world.tcp_hello_observer.TcpHelloObserver': ( 'tcp_hello_observer.html#tcphelloobserver',
                                                                                                               'tflm_hello_world/tcp_hello_observer.py'),
                                                     'tflm_hello_world.tcp_hello_observer.TcpHelloObserver.__handle_connection': ( 'tcp_hello_observer.html#tcphelloobserver.__handle_connection',
                                                                                                                                   'tflm_hello_world/tcp_hello_observer.py'),
                                                     'tflm_hello_world.tcp_hello_observer.TcpHelloObserver.__init__': ( 'tcp_hello_observer.html#tcphelloobserver.__init__',
                                                                                                                        'tflm_hello_world/tcp_hello_observer.py'),
                                                     'tflm_hello_world.tcp_hello_observer.TcpHelloObserver.is_connected': ( 'tcp_hello_observer.html#tcphelloobserver.is_connected',
                                                                                                                            'tflm_hello_world/tcp_hello_observer.py'),
                                                     'tflm_hello_world.tcp_hello_observer.TcpHelloObserver.parse_data': ( 'tcp_hello_observer.html#tcphelloobserver.parse_data',
                                                                                                                          'tflm_hello_world/tcp_hello_observer.py'),
                                                     'tflm_hello_world.tcp_hello_observer.TcpHelloObserver.parse_num': ( 'tcp_hello_observer.html#tcphelloobserver.parse_num',
                                                                                                                         'tflm_hello_world/tcp_hello_observer.py'),
                                                     'tflm_hello_world.tcp_hello_observer.TcpHelloObserver.serve_connection': ( 'tcp_hello_observer.html#tcphelloobserver.serve_connection',
                                                                                                                                'tflm_hello_world/tcp_hello_observer.py'),
                                                     'tflm_hello_world.tcp_hello_observer.TcpHelloObserver.start_server': ( 'tcp_hello_observer.html#tcphelloobserver.start_server',
                                                                                                                            'tflm_hello_world/tcp_hello_observer.py')},
            'tflm_hello_world.training': { 'tflm_hello_world.training.train_model': ( 'training.html#train_model',
                                                                                      'tflm_hello_world/training.py'),
                                           'tflm_hello_world.training.train_model.__init__': ( 'training.html#train_model.__init__',
                                                                                               'tflm_hello_world/training.py'),
                                           'tflm_hello_world.training.train_model.load_data': ( 'training.html#train_model.load_data',
                                                                                                'tflm_hello_world/training.py'),
                                           'tflm_hello_world.training.train_model.plot_statistics': ( 'training.html#train_model.plot_statistics',
                                                                                                      'tflm_hello_world/training.py'),
                                           'tflm_hello_world.training.train_model.prediction': ( 'training.html#train_model.prediction',
                                                                                                 'tflm_hello_world/training.py'),
                                           'tflm_hello_world.training.train_model.train': ( 'training.html#train_model.train',
                                                                                            'tflm_hello_world/training.py')}}}
