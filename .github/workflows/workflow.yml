name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3


  test-coverage:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with coverage
        run: |
          coverage run --branch -m pytest

      - name: Generate coverage report
        run: coverage xml -i

      - name: Run WebApp
        run: docker-compose up --build -d

      - name: Run Robot Framework tests
        run: robot pages/tests/

      - name: Get Robot Coverage
        run: |
          CONTAINER=$(docker-compose ps -q frontend)
          docker stop $CONTAINER
          docker cp $CONTAINER:/app/.coverage .coverage.robotframework

      - name: Combine coverage
        run: python3 -m coverage combine

      - name: Write coverage to xml
        run: coverage xml --data-file .coverage -i -o robot_coverage.xml

      - name: Save coverage data and robot coverage data
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: |
            coverage.xml
            robot_coverage.xml
            selenium-screenshot*
            log.html

  upload-coverage:
    runs-on: ubuntu-latest
    needs: test-coverage
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Download coverage data
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: coverage-files

      - name: Coverage report to Codecov
        run: bash <(curl -s https://codecov.io/bash) -t d99ac816-7bc2-458e-a39f-9d5784d767ed
        working-directory: coverage-files

  push-to-huggingface:
    runs-on: ubuntu-latest
    needs: upload-coverage
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true
      - name: Clean repo for huggingface
        run: |
          rm -rf .git
          mv huggingface.md README.md
          git config --global init.defaultBranch main
          git config --global user.email "mail"
          git config --global user.name "name"
          git init
          git lfs install
          git lfs track "*.png" "*.jpg"
          git add . 
          git commit -m "huggingface"

      - name: Push to huggingface
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_USER: ${{ vars.HF_USERNAME }}
          HF_SPACE: ${{ vars.HF_SPACE }}
        run: git push --force https://$HF_USER:$HF_TOKEN@huggingface.co/spaces/$HF_USER/$HF_SPACE main

